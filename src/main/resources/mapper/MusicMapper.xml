<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxq.blog.module.mapper.MusicMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="Music">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="artist" property="artist"/>
        <result column="url" property="url"/>
        <result column="cover" property="cover"/>
        <result column="lrc" property="lrc"/>
        <result column="created_time" property="createdTime"/>
        <result column="enabled" property="enabled"/>
        <result column="deleted" property="deleted"/>
    </resultMap>


    <resultMap id="VoResultMap" type="com.lxq.blog.vo.BlogVo">
        <id column="blog_id" property="blogId"/>
        <result column="blog_title" property="blogTitle"/>
        <result column="blog_image" property="blogImage"/>
        <result column="blog_content" property="blogContent"/>
        <result column="blog_goods" property="blogGoods"/>
        <result column="blog_read" property="blogRead"/>
        <result column="blog_collection" property="blogCollection"/>
        <result column="type_name" property="typeName"/>
        <result column="blog_remark" property="blogRemark"/>
        <result column="blog_comment" property="blogComment"/>
        <result column="blog_source" property="blogSource"/>
        <result column="blog_month" property="blogMonth"/>
        <result column="created_time" property="createdTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>


    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        name,
        artist,
        url,
        cover,
        lrc,
        created_time,
        enabled,
        deleted
    </sql>

    <select id="getList" resultMap="BaseResultMap">
        select
        id,
        name,
        artist,
        url,
        cover,
        created_time,
        enabled
        from bl_music
        where
        deleted = 0
        <if test="params.name!=null and params.name!=''">
            and name like CONCAT('%',#{params.name},'%')
        </if>
        <if test="params.artist!=null and params.artist!=''">
            and artist like CONCAT('%',#{params.artist},'%')
        </if>
        <if test="params.enabled!=null and params.enabled!=''">
            and enabled = #{params.enabled}
        </if>
        <if test="sortColumn!=null and sortColumn!=''">
            order by ${sortColumn} ${sortMethod}
        </if>
        limit #{index}, #{pageSize}
    </select>

    <select id="getCountByPage"  resultType="java.lang.Integer">
        select
        count(*)
        from bl_music
        where
        deleted = 0
        <if test="params.name!=null and params.name!=''">
            and name like CONCAT('%',#{params.name},'%')
        </if>
        <if test="params.artist!=null and params.artist!=''">
            and artist like CONCAT('%',#{params.artist},'%')
        </if>
        <if test="params.enabled!=null and params.enabled!=''">
            and enabled = #{params.enabled}
        </if>
    </select>

    <select id="recomRead" resultMap="VoResultMap">
        select
        blog_id, blog_title, blog_goods,
        blog_read, blog_collection, blog_comment,
        created_time,type_name
        from bl_blog as b
        inner join bl_type as t
        on type_id = blog_type
        where t.deleted = 0 and b.deleted = 0
        order by (blog_read + blog_goods) desc
        limit 5
    </select>

</mapper>
