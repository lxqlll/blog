<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxq.blog.module.mapper.BlogMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.lxq.blog.module.pojo.Blog">
        <id column="blog_id" property="blogId"/>
        <result column="blog_title" property="blogTitle"/>
        <result column="blog_image" property="blogImage"/>
        <result column="blog_content" property="blogContent"/>
        <result column="blog_goods" property="blogGoods"/>
        <result column="blog_read" property="blogRead"/>
        <result column="blog_collection" property="blogCollection"/>
        <result column="blog_type" property="blogType"/>
        <result column="blog_remark" property="blogRemark"/>
        <result column="blog_comment" property="blogComment"/>
        <result column="blog_source" property="blogSource"/>
        <result column="created_time" property="createdTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="version" property="version"/>
        <result column="deleted" property="deleted"/>
    </resultMap>
    <resultMap id="VoResultMap" type="com.lxq.blog.vo.BlogVo">
        <id column="blog_id" property="blogId"/>
        <result column="blog_title" property="blogTitle"/>
        <result column="blog_image" property="blogImage"/>
        <result column="blog_content" property="blogContent"/>
        <result column="blog_goods" property="blogGoods"/>
        <result column="blog_read" property="blogRead"/>
        <result column="blog_collection" property="blogCollection"/>
        <result column="type_name" property="typeName"/>
        <result column="blog_remark" property="blogRemark"/>
        <result column="blog_comment" property="blogComment"/>
        <result column="blog_source" property="blogSource"/>
        <result column="blog_month" property="blogMonth"/>
        <result column="created_time" property="createdTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="blogMonth" property="blog_month"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        blog_id, blog_title,blog_image, blog_content, blog_goods,
        blog_read, blog_collection, blog_type, blog_remark, blog_comment,
        blog_source, created_time, update_time, version, deleted
    </sql>

    <select id="getByPage" parameterType="com.lxq.blog.utils.Page" resultMap="VoResultMap">
        select
        blog_id, blog_title, blog_image, blog_goods,
        blog_read, blog_collection, blog_remark, blog_comment,
        blog_source, created_time, update_time,type_name
        from bl_blog as b
        inner join bl_type as t
        on type_id = blog_type
        where t.deleted = 0 and b.deleted = 0
        <if test="params.blogTitle!=null and params.blogTitle!=''">
            and blog_title like CONCAT('%', #{params.blogTitle}, '%')
        </if>
        <if test="params.typeId!=null and params.typeId!=''">
            and type_id = #{params.typeId}
        </if>
        <if test="sortColumn!=null and sortColumn!=''">
            order by ${sortColumn} ${sortMethod}
        </if>
        limit #{index}, #{pageSize}
    </select>

    <select id="getCountByPage" parameterType="com.lxq.blog.utils.Page" resultType="java.lang.Integer">
        select
        count(*)
        from bl_blog as b
        inner join bl_type as t
        on type_id = blog_type
        where t.deleted = 0 and b.deleted = 0
        <if test="params.blogTitle!=null and params.blogTitle!=''">
            and blog_title like CONCAT('%', #{params.blogTitle}, '%')
        </if>
        <if test="params.typeId!=null and params.typeId!=''">
            and type_id = #{params.typeId}
        </if>
        <if test="params.typeId!=null and params.typeId!=''">
            and type_id = #{params.typeId}
        </if>
    </select>

    <select id="recomRead" resultMap="VoResultMap">
        select
        blog_id, blog_title, blog_goods,
        blog_read, blog_collection, blog_comment,
        created_time,type_name
        from bl_blog as b
        inner join bl_type as t
        on type_id = blog_type
        where t.deleted = 0 and b.deleted = 0
        order by (blog_read + blog_goods) desc
        limit 5
    </select>

    <select id="getTimeLine" resultMap="VoResultMap">
        select
        blog_id, blog_title,
        created_time,
        date_format(created_time, '%Y-%m') as blog_month
        from bl_blog
        order by created_time desc
    </select>




</mapper>
